<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Weather Dashboard</title>
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
  <style>
    body {
      font-family: 'Roboto', sans-serif;
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 800px;
      background: linear-gradient(to bottom, #1c1c3c, #29346b);
      color: white;
    }

    .navbar {
      position: fixed;
      top: 0;
      left: 0;
      height: 100%;
      width: 50px; /* Chiều rộng ban đầu của thanh điều hướng */
      background-color: rgba(255, 255, 255, 0.1);
      overflow: hidden; /* Ẩn các mục trong thanh điều hướng khi không hover */
      transition: width 0.3s ease; /* Hiệu ứng mở rộng thanh điều hướng */
    }

    .navbar:hover {
      width: 200px; /* Mở rộng thanh điều hướng khi hover */
    }

    /* Icon 3 gạch ngang */
    .navbar .icon {
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      align-items: center;
      margin: 20px auto;
      width: 30px;
      height: 20px;
      cursor: pointer;
    }

    .navbar .icon div {
      width: 30px;
      height: 4px;
      background-color: white;
      border-radius: 2px;
    }

    /* Các mục trong thanh điều hướng */
    .navbar a {
      color: white;
      padding: 14px 20px;
      text-decoration: none;
      text-align: center;
      font-size: 1.2rem;
      margin: 10px 0;
      border-radius: 5px;
      transition: background-color 0.3s ease;
      display: block;
      opacity: 0; /* Ẩn các liên kết ban đầu */
      pointer-events: none; /* Vô hiệu hóa các liên kết khi không hover */
    }

    .navbar:hover a {
      opacity: 1; /* Hiển thị các liên kết khi hover */
      pointer-events: auto; /* Kích hoạt lại các liên kết khi hover */
    }

    .navbar a:hover {
      background-color: #00b8b8;
    }

    .container {
      width: 450px;
      height: 550px;
      padding: 40px;
      background: linear-gradient(to bottom, #383871, #1d2963);
      border-radius: 10px;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
      text-align: center;
      position: relative;
    }

    .title {
      font-size: 2em;
      margin-bottom: 10px;
    }

    .date-time {
      font-size: 1.5em;
      color: #ddd;
      display: flex;
      justify-content: center;
      align-items: center;
      position: relative;
    }

    .time {
      top: 94px;
      position: fixed;
      right: 510px; /* Căn vào góc phải */
      font-size: 0.8em;
      color: #ddd;
    }

    .temperature, .description, .details {
      font-size: 1.2em;
      margin-bottom: 50px;
    }

    .temperature {
      font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
      font-size: 4em;
      margin: 20px 0;
    }

    .details {
      display: flex;
      justify-content: space-around;
      margin-top: 20px;
    }

    .details div {
      text-align: center;
      font-size: 1em;
    }

    .details .label {
      font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
      font-size: 1.2em;
      color: #aaa;
    }

    .details .value {
      font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
      font-size: 1.5em;
      margin-top: 5px;
    }

    /* Hiệu ứng Fade-In */
    .fade-in {
      opacity: 0;
      animation: fadeIn 2s forwards;
    }

    @keyframes fadeIn {
      to {
        opacity: 1;
      }
    }

    .weather-image {
      width: 100px; /* Điều chỉnh kích thước hình ảnh */
      height: auto; /* Đảm bảo giữ tỉ lệ hình ảnh */
      margin: 20px auto; /* Thêms khoảng cách */
      display: block; /* Căn giữa hình ảnh */
    }

    .feeling_tem {
      width: 50px; /* Đặt chiều rộng ảnh */
      height: auto; /* Đặt chiều cao ảnh */
      margin: 10px auto; /* Thêms khoảng cách */
      display: block; /* Căn giữa hình ảnh */
    }

    .feeling_humi {
      width: 35px; /* Đặt chiều rộng ảnh */
      height: auto; /* Đặt chiều cao ảnh */
      margin: 20px auto; /* Thêms khoảng cách */
      display: block; /* Căn giữa hình ảnh */
    }
  </style>
</head>
<body>
  <div class="navbar">
    <div class="icon">
      <div></div>
      <div></div>
      <div></div>
    </div>
    <a href="/weather">Weather</a>
    <a href="/databoard">Databoard</a>
    <a href="/dashboard">Dashboard</a>
  </div>
  <div class="container">
    <div class="title fade-in"><b>Weather Dashboard</b></div>
    <img src="/image/nen_1.png" alt="Weather Background" class="weather-image">
    <div class="date-time fade-in" id="date-time">
      <span id="formatted-date">--</span>
      <span class="time" id="time">--</span>
    </div>
    <div class="temperature fade-in" id="temperature">--°C</div>
    <div class="description fade-in">TP.Hồ Chí Minh</div>
    <div class="details fade-in">
      <div>
        <img src="/image/cam_nhan.png" alt="feeling" class="feeling_tem">
        <div class="label">Cảm Nhận</div>
        <div class="value" id="feels_like">--°C</div>
      </div>
      <div>
        <img src="/image/do_am.png" alt="humidities" class="feeling_humi">
        <div class="label">Độ Ẩm</div>
        <div class="value" id="humidity">--%</div>
      </div>
    </div>
  </div>

  <script>
    // Hàm cập nhật ngày tháng và giờ hiện tại
    function updateDateTime() {
      const now = new Date();
      
      // Cập nhật ngày theo định dạng tiếng Việt
      const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
      const formattedDate = now.toLocaleDateString('vi-VN', options);
      document.getElementById('formatted-date').textContent = formattedDate;
      
      // Cập nhật giờ phút
      const hours = now.getHours().toString().padStart(2, '0');
      const minutes = now.getMinutes().toString().padStart(2, '0');
      const timeString = `${hours}:${minutes}`;

      // Hiển thị giờ phút
      document.getElementById('time').textContent = timeString;
    }

    // Gọi hàm updateDateTime mỗi giây
    setInterval(updateDateTime, 1000);
    updateDateTime(); // Gọi ngay lập tức khi trang load

    // Hàm lấy dữ liệu thời tiết
    async function fetchWeatherData() {
      try {
        const response = await fetch('/api/weather');
        const data = await response.json();
        document.getElementById('temperature').textContent = `${(data.temperature).toFixed(1)} °C`;
        document.getElementById('humidity').textContent = `${data.humidity} %`;
        document.getElementById('feels_like').textContent = `${(13.12 + 0.62 * data.temperature-11.37 * Math.pow(3, 0.16) + 0.3965 * data.temperature * Math.pow(3, 0.16)).toFixed(1)} °C`;
      } catch (error) {
        console.error("Error fetching weather data:", error);
      }
    }

    // Gọi hàm fetchWeatherData định kỳ mỗi 5 giây
    setInterval(fetchWeatherData, 5000);
    fetchWeatherData(); // Gọi lần đầu tiên khi trang load
  </script>
</body>
</html>
